
XPong.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000766  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000007da  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000040f  00800060  00800060  000007da  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000007da  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000080c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000158  00000000  00000000  00000848  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001406  00000000  00000000  000009a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a2d  00000000  00000000  00001da6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c25  00000000  00000000  000027d3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000318  00000000  00000000  000033f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000674  00000000  00000000  00003710  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000bbe  00000000  00000000  00003d84  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000118  00000000  00000000  00004942  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_1>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 e6       	ldi	r30, 0x66	; 102
  68:	f7 e0       	ldi	r31, 0x07	; 7
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	24 e0       	ldi	r18, 0x04	; 4
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	af 36       	cpi	r26, 0x6F	; 111
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 a3 03 	call	0x746	; 0x746 <main>
  8a:	0c 94 b1 03 	jmp	0x762	; 0x762 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <enc_init>:

 int8_t enc_value;

 void enc_init()
 {
	 ENC_PORT |= ENC_PIN_B;
  92:	92 9a       	sbi	0x12, 2	; 18
	 ENC_PORT |= ENC_PIN_A;
  94:	93 9a       	sbi	0x12, 3	; 18

	 GICR |= ENC_INTERRUPT;
  96:	8b b7       	in	r24, 0x3b	; 59
  98:	80 64       	ori	r24, 0x40	; 64
  9a:	8b bf       	out	0x3b, r24	; 59
	 MCUCR |= (1 << ISC00);
  9c:	85 b7       	in	r24, 0x35	; 53
  9e:	81 60       	ori	r24, 0x01	; 1
  a0:	85 bf       	out	0x35, r24	; 53

	 sei();
  a2:	78 94       	sei
  a4:	08 95       	ret

000000a6 <__vector_1>:
 }

ISR( INT0_vect)
{
  a6:	1f 92       	push	r1
  a8:	0f 92       	push	r0
  aa:	0f b6       	in	r0, 0x3f	; 63
  ac:	0f 92       	push	r0
  ae:	11 24       	eor	r1, r1
  b0:	8f 93       	push	r24
  b2:	9f 93       	push	r25
	static uint8_t dir;

	if(!(ENC_PIN & ENC_PIN_B))
  b4:	82 99       	sbic	0x10, 2	; 16
  b6:	05 c0       	rjmp	.+10     	; 0xc2 <__vector_1+0x1c>
	{
		dir = (ENC_PIN & ENC_PIN_A);
  b8:	80 b3       	in	r24, 0x10	; 16
  ba:	88 70       	andi	r24, 0x08	; 8
  bc:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__data_end>
  c0:	13 c0       	rjmp	.+38     	; 0xe8 <__vector_1+0x42>
	}
	else
	{
		if(dir != (ENC_PIN & ENC_PIN_A))
  c2:	90 91 60 00 	lds	r25, 0x0060	; 0x800060 <__data_end>
  c6:	80 b3       	in	r24, 0x10	; 16
  c8:	88 70       	andi	r24, 0x08	; 8
  ca:	89 17       	cp	r24, r25
  cc:	69 f0       	breq	.+26     	; 0xe8 <__vector_1+0x42>
		{
			if(dir)
  ce:	99 23       	and	r25, r25
  d0:	31 f0       	breq	.+12     	; 0xde <__vector_1+0x38>
			{
				enc_value++;
  d2:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <enc_value>
  d6:	8f 5f       	subi	r24, 0xFF	; 255
  d8:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <enc_value>
  dc:	05 c0       	rjmp	.+10     	; 0xe8 <__vector_1+0x42>
			}
			else
			{
				enc_value--;
  de:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <enc_value>
  e2:	81 50       	subi	r24, 0x01	; 1
  e4:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <enc_value>
			}
		}
	}
  e8:	9f 91       	pop	r25
  ea:	8f 91       	pop	r24
  ec:	0f 90       	pop	r0
  ee:	0f be       	out	0x3f, r0	; 63
  f0:	0f 90       	pop	r0
  f2:	1f 90       	pop	r1
  f4:	18 95       	reti

000000f6 <game_reset>:
	}
}

void game_draw_static_graphic()
{
	game_draw_borders();
  f6:	e8 e6       	ldi	r30, 0x68	; 104
  f8:	f0 e0       	ldi	r31, 0x00	; 0
  fa:	80 e4       	ldi	r24, 0x40	; 64
  fc:	80 83       	st	Z, r24
  fe:	80 e2       	ldi	r24, 0x20	; 32
 100:	81 83       	std	Z+1, r24	; 0x01
 102:	82 e0       	ldi	r24, 0x02	; 2
 104:	82 83       	std	Z+2, r24	; 0x02
 106:	13 82       	std	Z+3, r1	; 0x03
 108:	8c e1       	ldi	r24, 0x1C	; 28
 10a:	80 93 63 00 	sts	0x0063, r24	; 0x800063 <left_player_paddle+0x1>
 10e:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <right_player_paddle+0x1>
 112:	08 95       	ret

00000114 <game_clear_ball>:
 114:	cf 93       	push	r28
 116:	df 93       	push	r29
 118:	c8 e6       	ldi	r28, 0x68	; 104
 11a:	d0 e0       	ldi	r29, 0x00	; 0
 11c:	69 81       	ldd	r22, Y+1	; 0x01
 11e:	61 50       	subi	r22, 0x01	; 1
 120:	88 81       	ld	r24, Y
 122:	81 50       	subi	r24, 0x01	; 1
 124:	0e 94 79 03 	call	0x6f2	; 0x6f2 <glcd_clear_pixel>
 128:	88 81       	ld	r24, Y
 12a:	69 81       	ldd	r22, Y+1	; 0x01
 12c:	81 50       	subi	r24, 0x01	; 1
 12e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <glcd_clear_pixel>
 132:	69 81       	ldd	r22, Y+1	; 0x01
 134:	6f 5f       	subi	r22, 0xFF	; 255
 136:	88 81       	ld	r24, Y
 138:	81 50       	subi	r24, 0x01	; 1
 13a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <glcd_clear_pixel>
 13e:	69 81       	ldd	r22, Y+1	; 0x01
 140:	61 50       	subi	r22, 0x01	; 1
 142:	88 81       	ld	r24, Y
 144:	0e 94 79 03 	call	0x6f2	; 0x6f2 <glcd_clear_pixel>
 148:	69 81       	ldd	r22, Y+1	; 0x01
 14a:	88 81       	ld	r24, Y
 14c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <glcd_clear_pixel>
 150:	69 81       	ldd	r22, Y+1	; 0x01
 152:	6f 5f       	subi	r22, 0xFF	; 255
 154:	88 81       	ld	r24, Y
 156:	0e 94 79 03 	call	0x6f2	; 0x6f2 <glcd_clear_pixel>
 15a:	69 81       	ldd	r22, Y+1	; 0x01
 15c:	61 50       	subi	r22, 0x01	; 1
 15e:	88 81       	ld	r24, Y
 160:	8f 5f       	subi	r24, 0xFF	; 255
 162:	0e 94 79 03 	call	0x6f2	; 0x6f2 <glcd_clear_pixel>
 166:	88 81       	ld	r24, Y
 168:	69 81       	ldd	r22, Y+1	; 0x01
 16a:	8f 5f       	subi	r24, 0xFF	; 255
 16c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <glcd_clear_pixel>
 170:	69 81       	ldd	r22, Y+1	; 0x01
 172:	6f 5f       	subi	r22, 0xFF	; 255
 174:	88 81       	ld	r24, Y
 176:	8f 5f       	subi	r24, 0xFF	; 255
 178:	0e 94 79 03 	call	0x6f2	; 0x6f2 <glcd_clear_pixel>
 17c:	df 91       	pop	r29
 17e:	cf 91       	pop	r28
 180:	08 95       	ret

00000182 <game_clear_paddles>:
 182:	ef 92       	push	r14
 184:	ff 92       	push	r15
 186:	0f 93       	push	r16
 188:	1f 93       	push	r17
 18a:	cf 93       	push	r28
 18c:	c0 e0       	ldi	r28, 0x00	; 0
 18e:	0f 2e       	mov	r0, r31
 190:	f2 e6       	ldi	r31, 0x62	; 98
 192:	ef 2e       	mov	r14, r31
 194:	f0 e0       	ldi	r31, 0x00	; 0
 196:	ff 2e       	mov	r15, r31
 198:	f0 2d       	mov	r31, r0
 19a:	05 e6       	ldi	r16, 0x65	; 101
 19c:	10 e0       	ldi	r17, 0x00	; 0
 19e:	f7 01       	movw	r30, r14
 1a0:	60 81       	ld	r22, Z
 1a2:	6c 0f       	add	r22, r28
 1a4:	80 e2       	ldi	r24, 0x20	; 32
 1a6:	0e 94 79 03 	call	0x6f2	; 0x6f2 <glcd_clear_pixel>
 1aa:	f8 01       	movw	r30, r16
 1ac:	60 81       	ld	r22, Z
 1ae:	6c 0f       	add	r22, r28
 1b0:	80 e6       	ldi	r24, 0x60	; 96
 1b2:	0e 94 79 03 	call	0x6f2	; 0x6f2 <glcd_clear_pixel>
 1b6:	f7 01       	movw	r30, r14
 1b8:	60 81       	ld	r22, Z
 1ba:	6c 0f       	add	r22, r28
 1bc:	81 e2       	ldi	r24, 0x21	; 33
 1be:	0e 94 79 03 	call	0x6f2	; 0x6f2 <glcd_clear_pixel>
 1c2:	f8 01       	movw	r30, r16
 1c4:	60 81       	ld	r22, Z
 1c6:	6c 0f       	add	r22, r28
 1c8:	8f e5       	ldi	r24, 0x5F	; 95
 1ca:	0e 94 79 03 	call	0x6f2	; 0x6f2 <glcd_clear_pixel>
 1ce:	cf 5f       	subi	r28, 0xFF	; 255
 1d0:	c9 30       	cpi	r28, 0x09	; 9
 1d2:	29 f7       	brne	.-54     	; 0x19e <game_clear_paddles+0x1c>
 1d4:	cf 91       	pop	r28
 1d6:	1f 91       	pop	r17
 1d8:	0f 91       	pop	r16
 1da:	ff 90       	pop	r15
 1dc:	ef 90       	pop	r14
 1de:	08 95       	ret

000001e0 <game_draw_ball>:
 1e0:	cf 93       	push	r28
 1e2:	df 93       	push	r29
 1e4:	c8 e6       	ldi	r28, 0x68	; 104
 1e6:	d0 e0       	ldi	r29, 0x00	; 0
 1e8:	69 81       	ldd	r22, Y+1	; 0x01
 1ea:	61 50       	subi	r22, 0x01	; 1
 1ec:	88 81       	ld	r24, Y
 1ee:	81 50       	subi	r24, 0x01	; 1
 1f0:	0e 94 50 03 	call	0x6a0	; 0x6a0 <glcd_set_pixel>
 1f4:	88 81       	ld	r24, Y
 1f6:	69 81       	ldd	r22, Y+1	; 0x01
 1f8:	81 50       	subi	r24, 0x01	; 1
 1fa:	0e 94 50 03 	call	0x6a0	; 0x6a0 <glcd_set_pixel>
 1fe:	69 81       	ldd	r22, Y+1	; 0x01
 200:	6f 5f       	subi	r22, 0xFF	; 255
 202:	88 81       	ld	r24, Y
 204:	81 50       	subi	r24, 0x01	; 1
 206:	0e 94 50 03 	call	0x6a0	; 0x6a0 <glcd_set_pixel>
 20a:	69 81       	ldd	r22, Y+1	; 0x01
 20c:	61 50       	subi	r22, 0x01	; 1
 20e:	88 81       	ld	r24, Y
 210:	0e 94 50 03 	call	0x6a0	; 0x6a0 <glcd_set_pixel>
 214:	69 81       	ldd	r22, Y+1	; 0x01
 216:	88 81       	ld	r24, Y
 218:	0e 94 50 03 	call	0x6a0	; 0x6a0 <glcd_set_pixel>
 21c:	69 81       	ldd	r22, Y+1	; 0x01
 21e:	6f 5f       	subi	r22, 0xFF	; 255
 220:	88 81       	ld	r24, Y
 222:	0e 94 50 03 	call	0x6a0	; 0x6a0 <glcd_set_pixel>
 226:	69 81       	ldd	r22, Y+1	; 0x01
 228:	61 50       	subi	r22, 0x01	; 1
 22a:	88 81       	ld	r24, Y
 22c:	8f 5f       	subi	r24, 0xFF	; 255
 22e:	0e 94 50 03 	call	0x6a0	; 0x6a0 <glcd_set_pixel>
 232:	88 81       	ld	r24, Y
 234:	69 81       	ldd	r22, Y+1	; 0x01
 236:	8f 5f       	subi	r24, 0xFF	; 255
 238:	0e 94 50 03 	call	0x6a0	; 0x6a0 <glcd_set_pixel>
 23c:	69 81       	ldd	r22, Y+1	; 0x01
 23e:	6f 5f       	subi	r22, 0xFF	; 255
 240:	88 81       	ld	r24, Y
 242:	8f 5f       	subi	r24, 0xFF	; 255
 244:	0e 94 50 03 	call	0x6a0	; 0x6a0 <glcd_set_pixel>
 248:	df 91       	pop	r29
 24a:	cf 91       	pop	r28
 24c:	08 95       	ret

0000024e <game_draw_paddles>:
 24e:	ef 92       	push	r14
 250:	ff 92       	push	r15
 252:	0f 93       	push	r16
 254:	1f 93       	push	r17
 256:	cf 93       	push	r28
 258:	c0 e0       	ldi	r28, 0x00	; 0
 25a:	0f 2e       	mov	r0, r31
 25c:	f2 e6       	ldi	r31, 0x62	; 98
 25e:	ef 2e       	mov	r14, r31
 260:	f0 e0       	ldi	r31, 0x00	; 0
 262:	ff 2e       	mov	r15, r31
 264:	f0 2d       	mov	r31, r0
 266:	05 e6       	ldi	r16, 0x65	; 101
 268:	10 e0       	ldi	r17, 0x00	; 0
 26a:	f7 01       	movw	r30, r14
 26c:	61 81       	ldd	r22, Z+1	; 0x01
 26e:	6c 0f       	add	r22, r28
 270:	80 e2       	ldi	r24, 0x20	; 32
 272:	0e 94 50 03 	call	0x6a0	; 0x6a0 <glcd_set_pixel>
 276:	f8 01       	movw	r30, r16
 278:	61 81       	ldd	r22, Z+1	; 0x01
 27a:	6c 0f       	add	r22, r28
 27c:	80 e6       	ldi	r24, 0x60	; 96
 27e:	0e 94 50 03 	call	0x6a0	; 0x6a0 <glcd_set_pixel>
 282:	f7 01       	movw	r30, r14
 284:	61 81       	ldd	r22, Z+1	; 0x01
 286:	6c 0f       	add	r22, r28
 288:	81 e2       	ldi	r24, 0x21	; 33
 28a:	0e 94 50 03 	call	0x6a0	; 0x6a0 <glcd_set_pixel>
 28e:	f8 01       	movw	r30, r16
 290:	61 81       	ldd	r22, Z+1	; 0x01
 292:	6c 0f       	add	r22, r28
 294:	8f e5       	ldi	r24, 0x5F	; 95
 296:	0e 94 50 03 	call	0x6a0	; 0x6a0 <glcd_set_pixel>
 29a:	cf 5f       	subi	r28, 0xFF	; 255
 29c:	c9 30       	cpi	r28, 0x09	; 9
 29e:	29 f7       	brne	.-54     	; 0x26a <game_draw_paddles+0x1c>
 2a0:	e2 e6       	ldi	r30, 0x62	; 98
 2a2:	f0 e0       	ldi	r31, 0x00	; 0
 2a4:	81 81       	ldd	r24, Z+1	; 0x01
 2a6:	80 83       	st	Z, r24
 2a8:	e5 e6       	ldi	r30, 0x65	; 101
 2aa:	f0 e0       	ldi	r31, 0x00	; 0
 2ac:	81 81       	ldd	r24, Z+1	; 0x01
 2ae:	80 83       	st	Z, r24
 2b0:	cf 91       	pop	r28
 2b2:	1f 91       	pop	r17
 2b4:	0f 91       	pop	r16
 2b6:	ff 90       	pop	r15
 2b8:	ef 90       	pop	r14
 2ba:	08 95       	ret

000002bc <game_is_ball_in_paddle>:
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	40 91 69 00 	lds	r20, 0x0069	; 0x800069 <ball+0x1>
 2c2:	04 2e       	mov	r0, r20
 2c4:	00 0c       	add	r0, r0
 2c6:	55 0b       	sbc	r21, r21
 2c8:	48 17       	cp	r20, r24
 2ca:	59 07       	cpc	r21, r25
 2cc:	4c f0       	brlt	.+18     	; 0x2e0 <game_is_ball_in_paddle+0x24>
 2ce:	9c 01       	movw	r18, r24
 2d0:	27 5f       	subi	r18, 0xF7	; 247
 2d2:	3f 4f       	sbci	r19, 0xFF	; 255
 2d4:	81 e0       	ldi	r24, 0x01	; 1
 2d6:	24 17       	cp	r18, r20
 2d8:	35 07       	cpc	r19, r21
 2da:	1c f4       	brge	.+6      	; 0x2e2 <game_is_ball_in_paddle+0x26>
 2dc:	80 e0       	ldi	r24, 0x00	; 0
 2de:	08 95       	ret
 2e0:	80 e0       	ldi	r24, 0x00	; 0
 2e2:	08 95       	ret

000002e4 <game_get_ball_vertical_speed>:
 2e4:	40 91 69 00 	lds	r20, 0x0069	; 0x800069 <ball+0x1>
 2e8:	04 2e       	mov	r0, r20
 2ea:	00 0c       	add	r0, r0
 2ec:	55 0b       	sbc	r21, r21
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	48 17       	cp	r20, r24
 2f2:	59 07       	cpc	r21, r25
 2f4:	e9 f0       	breq	.+58     	; 0x330 <game_get_ball_vertical_speed+0x4c>
 2f6:	9c 01       	movw	r18, r24
 2f8:	27 5f       	subi	r18, 0xF7	; 247
 2fa:	3f 4f       	sbci	r19, 0xFF	; 255
 2fc:	42 17       	cp	r20, r18
 2fe:	53 07       	cpc	r21, r19
 300:	c9 f0       	breq	.+50     	; 0x334 <game_get_ball_vertical_speed+0x50>
 302:	27 50       	subi	r18, 0x07	; 7
 304:	31 09       	sbc	r19, r1
 306:	42 17       	cp	r20, r18
 308:	53 07       	cpc	r21, r19
 30a:	b4 f0       	brlt	.+44     	; 0x338 <game_get_ball_vertical_speed+0x54>
 30c:	2b 5f       	subi	r18, 0xFB	; 251
 30e:	3f 4f       	sbci	r19, 0xFF	; 255
 310:	24 17       	cp	r18, r20
 312:	35 07       	cpc	r19, r21
 314:	9c f0       	brlt	.+38     	; 0x33c <game_get_ball_vertical_speed+0x58>
 316:	23 50       	subi	r18, 0x03	; 3
 318:	31 09       	sbc	r19, r1
 31a:	42 17       	cp	r20, r18
 31c:	53 07       	cpc	r21, r19
 31e:	84 f0       	brlt	.+32     	; 0x340 <game_get_ball_vertical_speed+0x5c>
 320:	2f 5f       	subi	r18, 0xFF	; 255
 322:	3f 4f       	sbci	r19, 0xFF	; 255
 324:	81 e0       	ldi	r24, 0x01	; 1
 326:	24 17       	cp	r18, r20
 328:	35 07       	cpc	r19, r21
 32a:	5c f0       	brlt	.+22     	; 0x342 <game_get_ball_vertical_speed+0x5e>
 32c:	80 e0       	ldi	r24, 0x00	; 0
 32e:	08 95       	ret
 330:	8d ef       	ldi	r24, 0xFD	; 253
 332:	08 95       	ret
 334:	83 e0       	ldi	r24, 0x03	; 3
 336:	08 95       	ret
 338:	8e ef       	ldi	r24, 0xFE	; 254
 33a:	08 95       	ret
 33c:	82 e0       	ldi	r24, 0x02	; 2
 33e:	08 95       	ret
 340:	8f ef       	ldi	r24, 0xFF	; 255
 342:	08 95       	ret

00000344 <game_get_ball_reflected_horizontal_speed>:
 344:	e8 e6       	ldi	r30, 0x68	; 104
 346:	f0 e0       	ldi	r31, 0x00	; 0
 348:	92 81       	ldd	r25, Z+2	; 0x02
 34a:	89 2f       	mov	r24, r25
 34c:	81 95       	neg	r24
 34e:	23 81       	ldd	r18, Z+3	; 0x03
 350:	21 11       	cpse	r18, r1
 352:	06 c0       	rjmp	.+12     	; 0x360 <game_get_ball_reflected_horizontal_speed+0x1c>
 354:	18 16       	cp	r1, r24
 356:	14 f0       	brlt	.+4      	; 0x35c <game_get_ball_reflected_horizontal_speed+0x18>
 358:	8f ef       	ldi	r24, 0xFF	; 255
 35a:	01 c0       	rjmp	.+2      	; 0x35e <game_get_ball_reflected_horizontal_speed+0x1a>
 35c:	81 e0       	ldi	r24, 0x01	; 1
 35e:	89 1b       	sub	r24, r25
 360:	8a 3f       	cpi	r24, 0xFA	; 250
 362:	0c f4       	brge	.+2      	; 0x366 <game_get_ball_reflected_horizontal_speed+0x22>
 364:	8a ef       	ldi	r24, 0xFA	; 250
 366:	87 30       	cpi	r24, 0x07	; 7
 368:	0c f0       	brlt	.+2      	; 0x36c <game_get_ball_reflected_horizontal_speed+0x28>
 36a:	86 e0       	ldi	r24, 0x06	; 6
 36c:	08 95       	ret

0000036e <game_move_right_paddle>:
 36e:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <ball+0x1>
 372:	84 50       	subi	r24, 0x04	; 4
 374:	28 2f       	mov	r18, r24
 376:	08 2e       	mov	r0, r24
 378:	00 0c       	add	r0, r0
 37a:	33 0b       	sbc	r19, r19
 37c:	27 5f       	subi	r18, 0xF7	; 247
 37e:	3f 4f       	sbci	r19, 0xFF	; 255
 380:	21 34       	cpi	r18, 0x41	; 65
 382:	31 05       	cpc	r19, r1
 384:	24 f4       	brge	.+8      	; 0x38e <game_move_right_paddle+0x20>
 386:	88 23       	and	r24, r24
 388:	1c f4       	brge	.+6      	; 0x390 <game_move_right_paddle+0x22>
 38a:	80 e0       	ldi	r24, 0x00	; 0
 38c:	01 c0       	rjmp	.+2      	; 0x390 <game_move_right_paddle+0x22>
 38e:	87 e3       	ldi	r24, 0x37	; 55
 390:	90 91 66 00 	lds	r25, 0x0066	; 0x800066 <right_player_paddle+0x1>
 394:	89 1b       	sub	r24, r25
 396:	18 16       	cp	r1, r24
 398:	6c f4       	brge	.+26     	; 0x3b4 <game_move_right_paddle+0x46>
 39a:	83 31       	cpi	r24, 0x13	; 19
 39c:	24 f4       	brge	.+8      	; 0x3a6 <game_move_right_paddle+0x38>
 39e:	8a 30       	cpi	r24, 0x0A	; 10
 3a0:	24 f4       	brge	.+8      	; 0x3aa <game_move_right_paddle+0x3c>
 3a2:	82 e0       	ldi	r24, 0x02	; 2
 3a4:	03 c0       	rjmp	.+6      	; 0x3ac <game_move_right_paddle+0x3e>
 3a6:	89 e0       	ldi	r24, 0x09	; 9
 3a8:	01 c0       	rjmp	.+2      	; 0x3ac <game_move_right_paddle+0x3e>
 3aa:	84 e0       	ldi	r24, 0x04	; 4
 3ac:	98 0f       	add	r25, r24
 3ae:	90 93 66 00 	sts	0x0066, r25	; 0x800066 <right_player_paddle+0x1>
 3b2:	08 95       	ret
 3b4:	88 23       	and	r24, r24
 3b6:	64 f4       	brge	.+24     	; 0x3d0 <game_move_right_paddle+0x62>
 3b8:	83 31       	cpi	r24, 0x13	; 19
 3ba:	24 f4       	brge	.+8      	; 0x3c4 <game_move_right_paddle+0x56>
 3bc:	8a 30       	cpi	r24, 0x0A	; 10
 3be:	24 f4       	brge	.+8      	; 0x3c8 <game_move_right_paddle+0x5a>
 3c0:	82 e0       	ldi	r24, 0x02	; 2
 3c2:	03 c0       	rjmp	.+6      	; 0x3ca <game_move_right_paddle+0x5c>
 3c4:	89 e0       	ldi	r24, 0x09	; 9
 3c6:	01 c0       	rjmp	.+2      	; 0x3ca <game_move_right_paddle+0x5c>
 3c8:	84 e0       	ldi	r24, 0x04	; 4
 3ca:	98 1b       	sub	r25, r24
 3cc:	90 93 66 00 	sts	0x0066, r25	; 0x800066 <right_player_paddle+0x1>
 3d0:	08 95       	ret

000003d2 <game_update>:
 3d2:	cf 93       	push	r28
 3d4:	df 93       	push	r29
 3d6:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <ball>
 3da:	83 32       	cpi	r24, 0x23	; 35
 3dc:	f0 f4       	brcc	.+60     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 3de:	81 32       	cpi	r24, 0x21	; 33
 3e0:	58 f4       	brcc	.+22     	; 0x3f8 <game_update+0x26>
 3e2:	e5 e6       	ldi	r30, 0x65	; 101
 3e4:	f0 e0       	ldi	r31, 0x00	; 0
 3e6:	82 81       	ldd	r24, Z+2	; 0x02
 3e8:	8f 5f       	subi	r24, 0xFF	; 255
 3ea:	82 83       	std	Z+2, r24	; 0x02
 3ec:	0e 94 7b 00 	call	0xf6	; 0xf6 <game_reset>
 3f0:	8e ef       	ldi	r24, 0xFE	; 254
 3f2:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <ball+0x2>
 3f6:	2d c0       	rjmp	.+90     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 3f8:	c0 91 63 00 	lds	r28, 0x0063	; 0x800063 <left_player_paddle+0x1>
 3fc:	8c 2f       	mov	r24, r28
 3fe:	0e 94 5e 01 	call	0x2bc	; 0x2bc <game_is_ball_in_paddle>
 402:	88 23       	and	r24, r24
 404:	31 f1       	breq	.+76     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 406:	8c 2f       	mov	r24, r28
 408:	0e 94 72 01 	call	0x2e4	; 0x2e4 <game_get_ball_vertical_speed>
 40c:	c8 e6       	ldi	r28, 0x68	; 104
 40e:	d0 e0       	ldi	r29, 0x00	; 0
 410:	8b 83       	std	Y+3, r24	; 0x03
 412:	0e 94 a2 01 	call	0x344	; 0x344 <game_get_ball_reflected_horizontal_speed>
 416:	8a 83       	std	Y+2, r24	; 0x02
 418:	1c c0       	rjmp	.+56     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 41a:	8e 35       	cpi	r24, 0x5E	; 94
 41c:	d0 f0       	brcs	.+52     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 41e:	80 36       	cpi	r24, 0x60	; 96
 420:	40 f0       	brcs	.+16     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 422:	e2 e6       	ldi	r30, 0x62	; 98
 424:	f0 e0       	ldi	r31, 0x00	; 0
 426:	82 81       	ldd	r24, Z+2	; 0x02
 428:	8f 5f       	subi	r24, 0xFF	; 255
 42a:	82 83       	std	Z+2, r24	; 0x02
 42c:	0e 94 7b 00 	call	0xf6	; 0xf6 <game_reset>
 430:	10 c0       	rjmp	.+32     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 432:	c0 91 66 00 	lds	r28, 0x0066	; 0x800066 <right_player_paddle+0x1>
 436:	8c 2f       	mov	r24, r28
 438:	0e 94 5e 01 	call	0x2bc	; 0x2bc <game_is_ball_in_paddle>
 43c:	88 23       	and	r24, r24
 43e:	49 f0       	breq	.+18     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 440:	8c 2f       	mov	r24, r28
 442:	0e 94 72 01 	call	0x2e4	; 0x2e4 <game_get_ball_vertical_speed>
 446:	c8 e6       	ldi	r28, 0x68	; 104
 448:	d0 e0       	ldi	r29, 0x00	; 0
 44a:	8b 83       	std	Y+3, r24	; 0x03
 44c:	0e 94 a2 01 	call	0x344	; 0x344 <game_get_ball_reflected_horizontal_speed>
 450:	8a 83       	std	Y+2, r24	; 0x02
 452:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <ball>
 456:	81 34       	cpi	r24, 0x41	; 65
 458:	10 f0       	brcs	.+4      	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 45a:	0e 94 b7 01 	call	0x36e	; 0x36e <game_move_right_paddle>
 45e:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <enc_value>
 462:	28 2f       	mov	r18, r24
 464:	08 2e       	mov	r0, r24
 466:	00 0c       	add	r0, r0
 468:	33 0b       	sbc	r19, r19
 46a:	27 5f       	subi	r18, 0xF7	; 247
 46c:	3f 4f       	sbci	r19, 0xFF	; 255
 46e:	21 34       	cpi	r18, 0x41	; 65
 470:	31 05       	cpc	r19, r1
 472:	24 f0       	brlt	.+8      	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
 474:	87 e3       	ldi	r24, 0x37	; 55
 476:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <enc_value>
 47a:	05 c0       	rjmp	.+10     	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 47c:	88 23       	and	r24, r24
 47e:	1c f4       	brge	.+6      	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 480:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <enc_value>
 484:	80 e0       	ldi	r24, 0x00	; 0
 486:	80 93 63 00 	sts	0x0063, r24	; 0x800063 <left_player_paddle+0x1>
 48a:	e8 e6       	ldi	r30, 0x68	; 104
 48c:	f0 e0       	ldi	r31, 0x00	; 0
 48e:	20 81       	ld	r18, Z
 490:	32 81       	ldd	r19, Z+2	; 0x02
 492:	83 2f       	mov	r24, r19
 494:	03 2e       	mov	r0, r19
 496:	00 0c       	add	r0, r0
 498:	99 0b       	sbc	r25, r25
 49a:	82 0f       	add	r24, r18
 49c:	91 1d       	adc	r25, r1
 49e:	80 32       	cpi	r24, 0x20	; 32
 4a0:	91 05       	cpc	r25, r1
 4a2:	24 f4       	brge	.+8      	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 4a4:	80 e2       	ldi	r24, 0x20	; 32
 4a6:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <ball>
 4aa:	0a c0       	rjmp	.+20     	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 4ac:	81 36       	cpi	r24, 0x61	; 97
 4ae:	91 05       	cpc	r25, r1
 4b0:	24 f0       	brlt	.+8      	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 4b2:	80 e6       	ldi	r24, 0x60	; 96
 4b4:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <ball>
 4b8:	03 c0       	rjmp	.+6      	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 4ba:	23 0f       	add	r18, r19
 4bc:	20 93 68 00 	sts	0x0068, r18	; 0x800068 <ball>
 4c0:	e8 e6       	ldi	r30, 0x68	; 104
 4c2:	f0 e0       	ldi	r31, 0x00	; 0
 4c4:	91 81       	ldd	r25, Z+1	; 0x01
 4c6:	83 81       	ldd	r24, Z+3	; 0x03
 4c8:	28 2f       	mov	r18, r24
 4ca:	08 2e       	mov	r0, r24
 4cc:	00 0c       	add	r0, r0
 4ce:	33 0b       	sbc	r19, r19
 4d0:	29 0f       	add	r18, r25
 4d2:	31 1d       	adc	r19, r1
 4d4:	97 fd       	sbrc	r25, 7
 4d6:	3a 95       	dec	r19
 4d8:	33 23       	and	r19, r19
 4da:	24 f4       	brge	.+8      	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 4dc:	11 82       	std	Z+1, r1	; 0x01
 4de:	81 95       	neg	r24
 4e0:	83 83       	std	Z+3, r24	; 0x03
 4e2:	0d c0       	rjmp	.+26     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4e4:	2e 33       	cpi	r18, 0x3E	; 62
 4e6:	31 05       	cpc	r19, r1
 4e8:	3c f0       	brlt	.+14     	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
 4ea:	e8 e6       	ldi	r30, 0x68	; 104
 4ec:	f0 e0       	ldi	r31, 0x00	; 0
 4ee:	9d e3       	ldi	r25, 0x3D	; 61
 4f0:	91 83       	std	Z+1, r25	; 0x01
 4f2:	81 95       	neg	r24
 4f4:	83 83       	std	Z+3, r24	; 0x03
 4f6:	03 c0       	rjmp	.+6      	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4f8:	89 0f       	add	r24, r25
 4fa:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <ball+0x1>
 4fe:	df 91       	pop	r29
 500:	cf 91       	pop	r28
 502:	08 95       	ret

00000504 <game_loop>:
 504:	0e 94 8a 00 	call	0x114	; 0x114 <game_clear_ball>
 508:	0e 94 c1 00 	call	0x182	; 0x182 <game_clear_paddles>
 50c:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <game_update>
 510:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <game_draw_ball>
 514:	0e 94 27 01 	call	0x24e	; 0x24e <game_draw_paddles>
 518:	08 95       	ret

0000051a <game_draw_borders>:
 51a:	cf 93       	push	r28
 51c:	c0 e0       	ldi	r28, 0x00	; 0
 51e:	6c 2f       	mov	r22, r28
 520:	8e e1       	ldi	r24, 0x1E	; 30
 522:	0e 94 50 03 	call	0x6a0	; 0x6a0 <glcd_set_pixel>
 526:	6c 2f       	mov	r22, r28
 528:	82 e6       	ldi	r24, 0x62	; 98
 52a:	0e 94 50 03 	call	0x6a0	; 0x6a0 <glcd_set_pixel>
 52e:	cf 5f       	subi	r28, 0xFF	; 255
 530:	c0 34       	cpi	r28, 0x40	; 64
 532:	a9 f7       	brne	.-22     	; 0x51e <game_draw_borders+0x4>
 534:	cf 91       	pop	r28
 536:	08 95       	ret

00000538 <game_init>:
///		PROCEDURES
//////////////////////////////////////////////////////////////////////////

void game_init() 
{
	game_reset(BALL_START_SPEED_X);
 538:	82 e0       	ldi	r24, 0x02	; 2
 53a:	90 e0       	ldi	r25, 0x00	; 0
 53c:	0e 94 7b 00 	call	0xf6	; 0xf6 <game_reset>

	glcd_init();
 540:	0e 94 10 03 	call	0x620	; 0x620 <glcd_init>
	}
}

void game_draw_static_graphic()
{
	game_draw_borders();
 544:	0e 94 8d 02 	call	0x51a	; 0x51a <game_draw_borders>
	game_reset(BALL_START_SPEED_X);

	glcd_init();
	game_draw_static_graphic();

	enc_init();
 548:	0e 94 49 00 	call	0x92	; 0x92 <enc_init>
	enc_value = PADDLE_START_POSITION;
 54c:	8c e1       	ldi	r24, 0x1C	; 28
 54e:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <enc_value>
 552:	08 95       	ret

00000554 <glcd_enable_controller>:
 void glcd_clear_all()
 {
	glcd_enable_mirroring_controllers();
	glcd_clear();
	glcd_enable_controller(0);
	clear_screen_data();
 554:	88 23       	and	r24, r24
 556:	31 f0       	breq	.+12     	; 0x564 <glcd_enable_controller+0x10>
 558:	81 e0       	ldi	r24, 0x01	; 1
 55a:	80 93 6e 04 	sts	0x046E, r24	; 0x80046e <enabled_controller>
 55e:	da 98       	cbi	0x1b, 2	; 27
 560:	db 9a       	sbi	0x1b, 3	; 27
 562:	08 95       	ret
 564:	10 92 6e 04 	sts	0x046E, r1	; 0x80046e <enabled_controller>
 568:	db 98       	cbi	0x1b, 3	; 27
 56a:	da 9a       	sbi	0x1b, 2	; 27
 56c:	08 95       	ret

0000056e <glcd_command>:
 56e:	9f ef       	ldi	r25, 0xFF	; 255
 570:	94 bb       	out	0x14, r25	; 20
 572:	d8 9a       	sbi	0x1b, 0	; 27
 574:	9a e1       	ldi	r25, 0x1A	; 26
 576:	9a 95       	dec	r25
 578:	f1 f7       	brne	.-4      	; 0x576 <glcd_command+0x8>
 57a:	00 c0       	rjmp	.+0      	; 0x57c <glcd_command+0xe>
 57c:	85 bb       	out	0x15, r24	; 21
 57e:	d8 98       	cbi	0x1b, 0	; 27
 580:	85 e3       	ldi	r24, 0x35	; 53
 582:	8a 95       	dec	r24
 584:	f1 f7       	brne	.-4      	; 0x582 <glcd_command+0x14>
 586:	00 00       	nop
 588:	08 95       	ret

0000058a <glcd_enable_mirroring_controllers>:
 58a:	8b b3       	in	r24, 0x1b	; 27
 58c:	83 7f       	andi	r24, 0xF3	; 243
 58e:	8b bb       	out	0x1b, r24	; 27
 590:	08 95       	ret

00000592 <glcd_write_data>:
 592:	cf 93       	push	r28
 594:	c8 2f       	mov	r28, r24
 596:	d9 9a       	sbi	0x1b, 1	; 27
 598:	0e 94 b7 02 	call	0x56e	; 0x56e <glcd_command>
 59c:	80 91 6d 04 	lds	r24, 0x046D	; 0x80046d <glcd_y>
 5a0:	20 91 6e 04 	lds	r18, 0x046E	; 0x80046e <enabled_controller>
 5a4:	30 e0       	ldi	r19, 0x00	; 0
 5a6:	2f 5f       	subi	r18, 0xFF	; 255
 5a8:	3f 4f       	sbci	r19, 0xFF	; 255
 5aa:	82 9f       	mul	r24, r18
 5ac:	f0 01       	movw	r30, r0
 5ae:	83 9f       	mul	r24, r19
 5b0:	f0 0d       	add	r31, r0
 5b2:	11 24       	eor	r1, r1
 5b4:	90 91 6c 00 	lds	r25, 0x006C	; 0x80006c <glcd_x>
 5b8:	ee 0f       	add	r30, r30
 5ba:	ff 1f       	adc	r31, r31
 5bc:	ee 0f       	add	r30, r30
 5be:	ff 1f       	adc	r31, r31
 5c0:	ee 0f       	add	r30, r30
 5c2:	ff 1f       	adc	r31, r31
 5c4:	e3 59       	subi	r30, 0x93	; 147
 5c6:	ff 4f       	sbci	r31, 0xFF	; 255
 5c8:	e9 0f       	add	r30, r25
 5ca:	f1 1d       	adc	r31, r1
 5cc:	c0 83       	st	Z, r28
 5ce:	8f 5f       	subi	r24, 0xFF	; 255
 5d0:	8f 73       	andi	r24, 0x3F	; 63
 5d2:	80 93 6d 04 	sts	0x046D, r24	; 0x80046d <glcd_y>
 5d6:	d9 98       	cbi	0x1b, 1	; 27
 5d8:	cf 91       	pop	r28
 5da:	08 95       	ret

000005dc <glcd_clear>:
 5dc:	1f 93       	push	r17
 5de:	cf 93       	push	r28
 5e0:	df 93       	push	r29
 5e2:	80 e4       	ldi	r24, 0x40	; 64
 5e4:	80 93 6d 04 	sts	0x046D, r24	; 0x80046d <glcd_y>
 5e8:	0e 94 b7 02 	call	0x56e	; 0x56e <glcd_command>
 5ec:	10 e0       	ldi	r17, 0x00	; 0
 5ee:	81 2f       	mov	r24, r17
 5f0:	88 6b       	ori	r24, 0xB8	; 184
 5f2:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <glcd_x>
 5f6:	0e 94 b7 02 	call	0x56e	; 0x56e <glcd_command>
 5fa:	c0 e4       	ldi	r28, 0x40	; 64
 5fc:	d0 e0       	ldi	r29, 0x00	; 0
 5fe:	80 e0       	ldi	r24, 0x00	; 0
 600:	0e 94 c9 02 	call	0x592	; 0x592 <glcd_write_data>
 604:	21 97       	sbiw	r28, 0x01	; 1
 606:	d9 f7       	brne	.-10     	; 0x5fe <glcd_clear+0x22>
 608:	1f 5f       	subi	r17, 0xFF	; 255
 60a:	18 30       	cpi	r17, 0x08	; 8
 60c:	81 f7       	brne	.-32     	; 0x5ee <glcd_clear+0x12>
 60e:	88 eb       	ldi	r24, 0xB8	; 184
 610:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <glcd_x>
 614:	0e 94 b7 02 	call	0x56e	; 0x56e <glcd_command>
 618:	df 91       	pop	r29
 61a:	cf 91       	pop	r28
 61c:	1f 91       	pop	r17
 61e:	08 95       	ret

00000620 <glcd_init>:
 620:	8f ef       	ldi	r24, 0xFF	; 255
 622:	84 bb       	out	0x14, r24	; 20
 624:	8a b3       	in	r24, 0x1a	; 26
 626:	8f 60       	ori	r24, 0x0F	; 15
 628:	8a bb       	out	0x1a, r24	; 26
 62a:	0e 94 c5 02 	call	0x58a	; 0x58a <glcd_enable_mirroring_controllers>
 62e:	8f e3       	ldi	r24, 0x3F	; 63
 630:	0e 94 b7 02 	call	0x56e	; 0x56e <glcd_command>
 634:	80 ec       	ldi	r24, 0xC0	; 192
 636:	0e 94 b7 02 	call	0x56e	; 0x56e <glcd_command>
 63a:	0e 94 ee 02 	call	0x5dc	; 0x5dc <glcd_clear>
 63e:	80 e0       	ldi	r24, 0x00	; 0
 640:	0e 94 aa 02 	call	0x554	; 0x554 <glcd_enable_controller>
 644:	08 95       	ret

00000646 <glcd_set_y>:
//////////////////////////////////////////////////////////////////////////
////////COMMANDS
//////////////////////////////////////////////////////////////////////////

void glcd_set_y(uint8_t y)
{
 646:	cf 93       	push	r28
 648:	c8 2f       	mov	r28, r24
	glcd_command(SET_Y(y));
 64a:	80 64       	ori	r24, 0x40	; 64
 64c:	80 93 6d 04 	sts	0x046D, r24	; 0x80046d <glcd_y>
 650:	0e 94 b7 02 	call	0x56e	; 0x56e <glcd_command>
	glcd_y = y;
 654:	c0 93 6d 04 	sts	0x046D, r28	; 0x80046d <glcd_y>
}
 658:	cf 91       	pop	r28
 65a:	08 95       	ret

0000065c <glcd_set_x>:

void glcd_set_x(uint8_t x)
{
 65c:	cf 93       	push	r28
 65e:	c8 2f       	mov	r28, r24
	glcd_command(SET_X(x));
 660:	88 6b       	ori	r24, 0xB8	; 184
 662:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <glcd_x>
 666:	0e 94 b7 02 	call	0x56e	; 0x56e <glcd_command>
	glcd_x = x;
 66a:	c0 93 6c 00 	sts	0x006C, r28	; 0x80006c <glcd_x>
 66e:	cf 91       	pop	r28
 670:	08 95       	ret

00000672 <glcd_set_cursor>:

	controller_port &= ~RS;
 }

 void glcd_set_cursor(uint8_t x, uint8_t y)
 {
 672:	cf 93       	push	r28
 674:	df 93       	push	r29
 676:	c8 2f       	mov	r28, r24
 678:	d6 2f       	mov	r29, r22
	uint8_t row = y/BITS_IN_BYTE;
	uint8_t column = x % SINGLE_CONTROLLER_SCREEN_WIDTH;
	uint8_t controller = x/SINGLE_CONTROLLER_SCREEN_WIDTH;

	glcd_enable_controller(controller);
 67a:	82 95       	swap	r24
 67c:	86 95       	lsr	r24
 67e:	86 95       	lsr	r24
 680:	83 70       	andi	r24, 0x03	; 3
 682:	0e 94 aa 02 	call	0x554	; 0x554 <glcd_enable_controller>
	glcd_set_x(row);
 686:	8d 2f       	mov	r24, r29
 688:	86 95       	lsr	r24
 68a:	86 95       	lsr	r24
 68c:	86 95       	lsr	r24
 68e:	0e 94 2e 03 	call	0x65c	; 0x65c <glcd_set_x>
	glcd_set_y(column);
 692:	8c 2f       	mov	r24, r28
 694:	8f 73       	andi	r24, 0x3F	; 63
 696:	0e 94 23 03 	call	0x646	; 0x646 <glcd_set_y>
 }
 69a:	df 91       	pop	r29
 69c:	cf 91       	pop	r28
 69e:	08 95       	ret

000006a0 <glcd_set_pixel>:

 void glcd_set_pixel(uint8_t x, uint8_t y)
 {
 6a0:	cf 93       	push	r28
 6a2:	c6 2f       	mov	r28, r22
	uint8_t pixel = y%BITS_IN_BYTE;
	glcd_set_cursor(x,y);
 6a4:	0e 94 39 03 	call	0x672	; 0x672 <glcd_set_cursor>

	uint8_t page_state = screen_data[glcd_y*(1+enabled_controller)][glcd_x] | 1 << pixel;
 6a8:	80 91 6e 04 	lds	r24, 0x046E	; 0x80046e <enabled_controller>
 6ac:	90 e0       	ldi	r25, 0x00	; 0
 6ae:	01 96       	adiw	r24, 0x01	; 1
 6b0:	20 91 6d 04 	lds	r18, 0x046D	; 0x80046d <glcd_y>
 6b4:	28 9f       	mul	r18, r24
 6b6:	f0 01       	movw	r30, r0
 6b8:	29 9f       	mul	r18, r25
 6ba:	f0 0d       	add	r31, r0
 6bc:	11 24       	eor	r1, r1
 6be:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <glcd_x>
 6c2:	ee 0f       	add	r30, r30
 6c4:	ff 1f       	adc	r31, r31
 6c6:	ee 0f       	add	r30, r30
 6c8:	ff 1f       	adc	r31, r31
 6ca:	ee 0f       	add	r30, r30
 6cc:	ff 1f       	adc	r31, r31
 6ce:	e3 59       	subi	r30, 0x93	; 147
 6d0:	ff 4f       	sbci	r31, 0xFF	; 255
 6d2:	e8 0f       	add	r30, r24
 6d4:	f1 1d       	adc	r31, r1

	glcd_write_data(page_state);
 6d6:	c7 70       	andi	r28, 0x07	; 7
 6d8:	81 e0       	ldi	r24, 0x01	; 1
 6da:	90 e0       	ldi	r25, 0x00	; 0
 6dc:	02 c0       	rjmp	.+4      	; 0x6e2 <glcd_set_pixel+0x42>
 6de:	88 0f       	add	r24, r24
 6e0:	99 1f       	adc	r25, r25
 6e2:	ca 95       	dec	r28
 6e4:	e2 f7       	brpl	.-8      	; 0x6de <glcd_set_pixel+0x3e>
 6e6:	90 81       	ld	r25, Z
 6e8:	89 2b       	or	r24, r25
 6ea:	0e 94 c9 02 	call	0x592	; 0x592 <glcd_write_data>
 }
 6ee:	cf 91       	pop	r28
 6f0:	08 95       	ret

000006f2 <glcd_clear_pixel>:

 void glcd_clear_pixel(uint8_t x, uint8_t y)
 {
 6f2:	cf 93       	push	r28
 6f4:	c6 2f       	mov	r28, r22
	uint8_t pixel = y%BITS_IN_BYTE;
	glcd_set_cursor(x,y);
 6f6:	0e 94 39 03 	call	0x672	; 0x672 <glcd_set_cursor>

	uint8_t page_state = screen_data[glcd_y*(1+enabled_controller)][glcd_x] & ~(1 << pixel);
 6fa:	80 91 6e 04 	lds	r24, 0x046E	; 0x80046e <enabled_controller>
 6fe:	90 e0       	ldi	r25, 0x00	; 0
 700:	01 96       	adiw	r24, 0x01	; 1
 702:	20 91 6d 04 	lds	r18, 0x046D	; 0x80046d <glcd_y>
 706:	28 9f       	mul	r18, r24
 708:	f0 01       	movw	r30, r0
 70a:	29 9f       	mul	r18, r25
 70c:	f0 0d       	add	r31, r0
 70e:	11 24       	eor	r1, r1
 710:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <glcd_x>
 714:	ee 0f       	add	r30, r30
 716:	ff 1f       	adc	r31, r31
 718:	ee 0f       	add	r30, r30
 71a:	ff 1f       	adc	r31, r31
 71c:	ee 0f       	add	r30, r30
 71e:	ff 1f       	adc	r31, r31
 720:	e3 59       	subi	r30, 0x93	; 147
 722:	ff 4f       	sbci	r31, 0xFF	; 255
 724:	e8 0f       	add	r30, r24
 726:	f1 1d       	adc	r31, r1

	glcd_write_data(page_state);
 728:	c7 70       	andi	r28, 0x07	; 7
 72a:	81 e0       	ldi	r24, 0x01	; 1
 72c:	90 e0       	ldi	r25, 0x00	; 0
 72e:	02 c0       	rjmp	.+4      	; 0x734 <glcd_clear_pixel+0x42>
 730:	88 0f       	add	r24, r24
 732:	99 1f       	adc	r25, r25
 734:	ca 95       	dec	r28
 736:	e2 f7       	brpl	.-8      	; 0x730 <glcd_clear_pixel+0x3e>
 738:	80 95       	com	r24
 73a:	90 81       	ld	r25, Z
 73c:	89 23       	and	r24, r25
 73e:	0e 94 c9 02 	call	0x592	; 0x592 <glcd_write_data>
 }
 742:	cf 91       	pop	r28
 744:	08 95       	ret

00000746 <main>:
#include "glcd/glcd.h"
#include "graphics/graphics.h"

int main(void)
{
	game_init();
 746:	0e 94 9c 02 	call	0x538	; 0x538 <game_init>

    while (1) 
    {
		game_loop();
 74a:	0e 94 82 02 	call	0x504	; 0x504 <game_loop>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 74e:	2f ef       	ldi	r18, 0xFF	; 255
 750:	83 ec       	ldi	r24, 0xC3	; 195
 752:	99 e0       	ldi	r25, 0x09	; 9
 754:	21 50       	subi	r18, 0x01	; 1
 756:	80 40       	sbci	r24, 0x00	; 0
 758:	90 40       	sbci	r25, 0x00	; 0
 75a:	e1 f7       	brne	.-8      	; 0x754 <main+0xe>
 75c:	00 c0       	rjmp	.+0      	; 0x75e <main+0x18>
 75e:	00 00       	nop
 760:	f4 cf       	rjmp	.-24     	; 0x74a <main+0x4>

00000762 <_exit>:
 762:	f8 94       	cli

00000764 <__stop_program>:
 764:	ff cf       	rjmp	.-2      	; 0x764 <__stop_program>
